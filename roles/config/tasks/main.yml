---

- name: Set the GPL Licensed setting in Ambari
  lineinfile:
    path: /etc/ambari-server/conf/ambari.properties
    backup: no
    state: present
    regexp: "^gpl.license.accepted.*"
    line: "gpl.license.accepted={{ (accept_gpl|default(omit)|bool == true) | ternary('true', 'false') }}"
  notify: Restart ambari-server

- name: Attempt to change the default Ambari admin password
  uri:
    url: http://{{ ansible_fqdn }}:{{ ambari_port }}/api/v1/users/admin
    method: PUT
    force_basic_auth: yes
    user: "{{ ambari_admin_user }}"
    password: "{{ ambari_admin_default_password }}"
    headers: '{"X-Requested-By":"ambari"}'
    body: " {\"Users\":{ \"password\":\"{{ ambari_admin_password }}\", \"old_password\":\"{{ ambari_admin_default_password }}\"}}"
    body_format: raw
    status_code: 200,201,202,403
    return_content: no
  when: ambari_admin_user == 'admin' and ambari_admin_password != ambari_admin_default_password

- name: Upload the HDP Version Definition file
  template:
    src: "vdf-HDP-{{ hdp_version }}.xml.j2"
    dest: "/tmp/cluster_vdf.xml"
    mode: 0640
    force: yes

- name: â€‹Enable User Home Directory Creation
  lineinfile:
    path: /etc/ambari-server/conf/ambari.properties
    state: present
    line: "{{ item }}"
  notify: Restart ambari-server
  with_items:
    - "ambari.post.user.creation.hook.enabled=true"
    - "ambari.post.user.creation.hook=/var/lib/ambari-server/resources/scripts/post-user-creation-hook.sh"

- name: Attempt to get an existing VDF for the required version
  uri:
    url: "http://{{ ansible_fqdn }}:{{ ambari_port }}/api/v1/version_definitions?VersionDefinition/release/version={{ hdp_version }}"
    method: GET
    force_basic_auth: yes
    user: "{{ ambari_admin_user }}"
    password: "{{ ambari_admin_password }}"
    headers: '{"X-Requested-By":"ambari"}'
    status_code: 200,201,202
    return_content: yes
  register: existing_vdf

- name: Register the VDF with Ambari
  uri:
    url: http://{{ ansible_fqdn }}:{{ ambari_port }}/api/v1/version_definitions
    method: POST
    force_basic_auth: yes
    user: "{{ ambari_admin_user }}"
    password: "{{ ambari_admin_password }}"
    headers: '{"X-Requested-By":"ambari"}'
    body: " {\"VersionDefinition\":{ \"version_url\":\"file:/tmp/cluster_vdf.xml\"}}"
    body_format: raw
    status_code: 200,201,202
    return_content: no
  when: (existing_vdf.content|from_yaml)['items'] | length == 0

- meta: flush_handlers

- name: Make sure all of the Ambari Agents have registered
  uri:
    url: http://{{ ansible_fqdn }}:{{ ambari_port }}/api/v1/hosts/{{ hostvars[item]['ansible_fqdn']|lower }}
    method: GET
    force_basic_auth: yes
    user: "{{ ambari_admin_user }}"
    password: "{{ ambari_admin_password }}"
    headers: '{"X-Requested-By":"ambari"}'
    status_code: 200,201,202,404
    return_content: no
  with_items: "{{ groups['ambari_agent'] }}"
  register: result
  until: "result.status != 404"
  retries: 100
  delay: 5

...